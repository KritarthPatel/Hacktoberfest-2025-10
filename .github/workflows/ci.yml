name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build TypeScript
      run: npm run build
    
    - name: Run tests
      run: npm test

  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest flake8 black
    
    - name: Lint with flake8
      run: |
        flake8 automarkdown --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 automarkdown --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check formatting with black
      run: black --check automarkdown
    
    - name: Test with pytest
      run: pytest

  integration-test:
    runs-on: ubuntu-latest
    needs: [test-node, test-python]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Node dependencies
      run: npm ci && npm run build
    
    - name: Install Python package
      run: pip install -e .
    
    - name: Test Node CLI
      run: |
        echo "Testing Node.js version..."
        node dist/cli.js --help
        node dist/cli.js . --format json | head -20
    
    - name: Test Python CLI
      run: |
        echo "Testing Python version..."
        automarkdown --help
        automarkdown convert . --format json | head -20